services:
  backend:
    build:
      context: ./marketplace-backend
    container_name: marketplace-backend
    ports:
      - "8080:8080"
    environment:
      # PostgreSQL
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}

      # Redis
      SPRING_REDIS_HOST: ${SPRING_REDIS_HOST}
      SPRING_REDIS_PORT: ${SPRING_REDIS_PORT}

      # JWT
      SECURITY_KEY: ${SECURITY_KEY}

      # RabbitMQ
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}

    volumes:
      - ./marketplace-backend/uploads/images:/app/uploads/images
      - ./marketplace-backend/products_dataset.json:/app/products_dataset.json
      - ./marketplace-backend/reviews_dataset.json:/app/reviews_dataset.json
    depends_on:
      - db
      - rabbitmq
      - redis
    networks:
      - my-network

  chat-service:
    build:
      context: ./chat-service
    container_name: chat-service
    ports:
      - "8081:8081"
    environment:
      # PostgreSQL
      SPRING_DATASOURCE_URL: ${CHAT_DB_URL}
      SPRING_DATASOURCE_USERNAME: ${CHAT_DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${CHAT_DB_PASS}

      # JWT or security
      SECURITY_KEY: ${SECURITY_KEY}

    depends_on:
      - chat-db
    networks:
      - my-network
      
  order-service:
    build:
      context: .
      dockerfile: order-service/Dockerfile
    container_name: order-service
    ports:
      - "8082:8082"
    environment:
      # PostgreSQL 
      SPRING_DATASOURCE_URL: ${ORDER_DB_URL}
      SPRING_DATASOURCE_USERNAME: ${ORDER_DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${ORDER_DB_PASS}

      # JWT or security
      SECURITY_KEY: ${SECURITY_KEY}

      # RabbitMQ
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}

    depends_on:
      - order-db
    networks:
      - my-network
      
  payment-service:
    build:
      context: .
      dockerfile: payment-service/Dockerfile
    container_name: payment-service
    ports:
      - "8083:8083"
    environment:
      # PostgreSQL 
      SPRING_DATASOURCE_URL: ${PAYMENT_DB_URL}
      SPRING_DATASOURCE_USERNAME: ${PAYMENT_DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${PAYMENT_DB_PASS}

      # JWT or security
      SECURITY_KEY: ${SECURITY_KEY}

      # RabbitMQ
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}

    depends_on:
      - payment-db
    networks:
      - my-network

  frontend:
    build:
      context: ./marketplace-frontend
    container_name: marketplace-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
      - chat-service
    networks:
      - my-network

  db:
    image: postgres:15
    container_name: marketplace-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - postgres_evolution_data:/var/lib/postgresql/data
    networks:
      - my-network

  chat-db:
    image: postgres:15
    container_name: chat-db
    environment:
      POSTGRES_DB: ${CHAT_DB}
      POSTGRES_USER: ${CHAT_DB_USER}
      POSTGRES_PASSWORD: ${CHAT_DB_PASS}
    ports:
      - "5434:5432"
    volumes:
      - chat_postgres_data:/var/lib/postgresql/data
    networks:
      - my-network

  order-db:
    image: postgres:15
    container_name: order-db
    environment:
      POSTGRES_DB: ${ORDER_DB}
      POSTGRES_USER: ${ORDER_DB_USER}
      POSTGRES_PASSWORD: ${ORDER_DB_PASS}
    ports:
      - "5435:5432"
    volumes:
      - order_postgres_data:/var/lib/postgresql/data
    networks:
      - my-network
      
  payment-db:
    image: postgres:15
    container_name: payment-db
    environment:
      POSTGRES_DB: ${PAYMENT_DB}
      POSTGRES_USER: ${PAYMENT_DB_USER}
      POSTGRES_PASSWORD: ${PAYMENT_DB_PASS}
    ports:
      - "5436:5432"
    volumes:
      - payment_postgres_data:/var/lib/postgresql/data
    networks:
      - my-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5673:5672"     # backend uses this
      - "15673:15672"   # management UI
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    networks:
      - my-network

  redis:
    image: redis:7
    container_name: redis
    networks:
      - my-network

volumes:
  postgres_evolution_data:
  chat_postgres_data:
  order_postgres_data:
  payment_postgres_data:

networks:
  my-network:
    driver: bridge
